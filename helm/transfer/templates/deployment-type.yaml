{{- if eq .Values.transferSpec.type "SNAPSHOT_ONLY" }}
# Include only the Job for SNAPSHOT_ONLY
{{ include "data-upload-job.job" . }}
---
# Include ondemand for SO
{{ include "data-upload-job.job-ondemand" . }}
---
{{- end }}

{{- if eq .Values.transferSpec.type "INCREMENT_ONLY" }}
# Include only the StatefulSet for INCREMENT_ONLY
{{ include "data-upload-job.statefulset" . }}
---
# Include ondemand for IO
{{ include "data-upload-job.job-ondemand" . }}
---
{{- end }}

{{- if eq .Values.transferSpec.type "SNAPSHOT_AND_INCREMENT" }}
# Include both Job and StatefulSet for SNAPSHOT_AND_INCREMENT
{{ include "data-upload-job.job" . }}
---
# Include ondemand for SI
{{ include "data-upload-job.job-ondemand" . }}
---

# Use Helm's built-in `postJob` hook to ensure the StatefulSet starts after the Job
apiVersion: batch/v1
kind: Job
metadata:
  name: post-job
  labels:
    app: data-upload
spec:
  template:
    metadata:
      labels:
        app: post-job
    spec:
      containers:
      - name: wait-for-job
        image: bitnami/kubectl:latest  # You can use a kubectl image
        command:
        - /bin/bash
        - -c
        - |
          while [[ $(kubectl get job data-upload-job -o jsonpath='{.status.succeeded}') != "{{ .Values.snapshot.worker_count }}" ]]; do
            echo "Waiting for data-upload-job to finish..."
            sleep 5
          done
      restartPolicy: Never
  backoffLimit: 1
---
{{ include "data-upload-job.statefulset" . }}
{{- end }}
